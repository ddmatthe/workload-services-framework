#
# Apache v2 license
# Copyright (C) 2023 Intel Corporation
# SPDX-License-Identifier: Apache-2.0
#

- block:

  - name: Check if gprofiler is already installed
    stat:
      path: /usr/local/bin/gprofiler
    register: gprofiler

  - name: Get uname -m
    command: uname -m
    register: uname
    when: not gprofiler.stat.exists

  - name: Fetch gprofiler
    get_url:
      url: "{{ gprofiler_package }}/gprofiler_{{ uname.stdout }}"
      dest: /usr/local/bin/gprofiler
      mode: "a+rx"
    become: true
    when: not gprofiler.stat.exists

  - name: Append the start script
    blockinfile:
      path: "/tmp/{{ wl_namespace }}-{{ trace_node.1 }}-start-trace.sh"
      marker: "# gprofiler {mark}"
      insertbefore: "^wait"
      block: |
        (
          mkdir -p /tmp/{{ wl_namespace }}-{{ trace_node.1 }}-gprofiler
          cd /tmp/{{ wl_namespace }}-{{ trace_node.1 }}-gprofiler
          if is_roi "{{ trace_node.0 }}"; then
            date -Ins >> TRACE_START
            killall -9 gprofiler || true
            rm -rf /tmp/gprofiler_tmp
            nohup /usr/local/bin/gprofiler {{ gprofiler_options }} --continuous --output /tmp/{{ wl_namespace }}-{{ trace_node.1 }}-gprofiler > gprofiler-$roi.logs 2>&1 &
            echo $! > gprofiler.pid
            disown
          else
            echo "---" >> TRACE_START
          fi
        ) &

  - name: Append the stop script
    blockinfile:
      path: "/tmp/{{ wl_namespace }}-{{ trace_node.1 }}-stop-trace.sh"
      marker: "# gprofiler {mark}"
      insertbefore: "^wait"
      block: |
        (
          cd /tmp/{{ wl_namespace }}-{{ trace_node.1 }}-gprofiler
          if is_roi "{{ trace_node.0 }}"; then
            date -Ins >> TRACE_STOP
            kill $(cat gprofiler.pid)
            pkill -TERM gprofiler
            rm -rf /tmp/gprofiler_tmp
          else
            echo "---" >> TRACE_STOP
          fi
        ) &

  delegate_to: "{{ trace_node.1 }}"
