#!/bin/bash -e
# define the workload arguments
#
# Apache v2 license
# Copyright (C) 2023 Intel Corporation
# SPDX-License-Identifier: Apache-2.0
#
WORKLOAD=${WORKLOAD:-Istio-Envoy-Forward}
MODE=${1:-RPS-MAX}
PROTOCOL=${2:-http1}
NODES="2n"
ISTIO_VERSION="1.18.0"

AUTO_EXTEND_INPUT=${AUTO_EXTEND_INPUT:-false}

# Nighthawk server cluster configuration
# nighthawk-server.istio-workload-nighthawk-server.svc.cluster.local:10000
SERVER_DOMAIN_NAME="nighthawk-server.istio-workload-nighthawk-server.svc.cluster.local"
SERVER_PORT=10000
SERVER_CORE_NUM=${SERVER_CORE_NUM:-15}
SERVER_MEM=${SERVER_MEM:-15Gi}
SERVER_DELAY_MODE=${SERVER_DELAY_MODE:-dynamic}
SERVER_DELAY_SECONDS=${SERVER_DELAY_SECONDS:-0.5} # Only applicable when in static delay mode
SERVER_RESPONSE_BODY_SIZE=${SERVER_RESPONSE_BODY_SIZE:-10}
SERVER_EGRESS_GW_CPU=${SERVER_EGRESS_GW_CPU:-8}

# Nighthawk client configuration
CLIENT_CONNECTIONS=${CLIENT_CONNECTIONS:-1000}
CLIENT_CONCURRENCY=${CLIENT_CONCURRENCY:-auto}
CLIENT_RPS=${CLIENT_RPS:-800}
CLIENT_RPS_MAX=${CLIENT_RPS_MAX:-1500}
CLIENT_RPS_STEP=${CLIENT_RPS_STEP:-20}
CLIENT_LATENCY_BASE=${CLIENT_LATENCY_BASE:-50}
CLIENT_REQUEST_BODY_SIZE=${CLIENT_REQUEST_BODY_SIZE:-400}
DURATION=${DURATION:-30}
KILL_DELAY=${KILL_DELAY:-30}

# EMON capture range
EVENT_TRACE_PARAMS="roi,start of region,end of region"


if [[ "${TESTCASE}" =~ "gated" ]]; then
    SERVER_EGRESS_GW_CPU=2
fi

# Logs Setting
DIR="$( cd "$( dirname "$0" )" &> /dev/null && pwd )"
. "$DIR/../../script/overwrite.sh"


case $SERVER_EGRESS_GW_CPU in
    2)
        echo "SERVER_EGRESS_GW_CPU=$SERVER_EGRESS_GW_CPU"
        SERVER_EGRESS_GW_MEM=2Gi
        CLIENT_CORE_NUM=8
        CLIENT_MEM=8Gi
        CLIENT_SIDECAR_CPU=8
        CLIENT_SIDECAR_MEM=8Gi
        ;;
    4)
        echo "SERVER_EGRESS_GW_CPU=$SERVER_EGRESS_GW_CPU"
        SERVER_EGRESS_GW_MEM=4Gi
        CLIENT_CORE_NUM=16
        CLIENT_MEM=16Gi
        CLIENT_SIDECAR_CPU=16
        CLIENT_SIDECAR_MEM=16Gi
        ;;
    8)
        echo "SERVER_EGRESS_GW_CPU=$SERVER_EGRESS_GW_CPU"
        SERVER_EGRESS_GW_MEM=8Gi
        CLIENT_CORE_NUM=30
        CLIENT_MEM=30Gi
        CLIENT_SIDECAR_CPU=30
        CLIENT_SIDECAR_MEM=30Gi
        ;;
    16)
        echo "SERVER_EGRESS_GW_CPU=$SERVER_EGRESS_GW_CPU"
        SERVER_EGRESS_GW_MEM=16Gi
        CLIENT_CORE_NUM=40
        CLIENT_MEM=40Gi
        CLIENT_SIDECAR_CPU=40
        CLIENT_SIDECAR_MEM=40Gi
        ;;
    *)
    echo "Invalid value for SERVER_EGRESS_GW_CPU"
    ;;
esac


. "$DIR/../../script/overwrite.sh"

echo CLIENT_RPS: $CLIENT_RPS
echo CLIENT_RPS_MAX: $CLIENT_RPS_MAX
echo CLIENT_RPS_STEP: $CLIENT_RPS_STEP
echo SERVER_EGRESS_GW_MEM set to $SERVER_EGRESS_GW_MEM
echo CLIENT_CORE_NUM set to $CLIENT_CORE_NUM
echo CLIENT_MEM set to $CLIENT_MEM
echo CLIENT_SIDECAR_CPU set to $CLIENT_SIDECAR_CPU
echo CLIENT_SIDECAR_MEM set to $CLIENT_SIDECAR_MEM


# Workload Setting
WORKLOAD_PARAMS=(MODE PROTOCOL NODES ISTIO_VERSION SERVER_DOMAIN_NAME SERVER_PORT SERVER_CORE_NUM SERVER_MEM SERVER_DELAY_MODE SERVER_DELAY_SECONDS SERVER_RESPONSE_BODY_SIZE SERVER_EGRESS_GW_CPU SERVER_EGRESS_GW_MEM CLIENT_CORE_NUM CLIENT_MEM CLIENT_SIDECAR_CPU CLIENT_SIDECAR_MEM CLIENT_CONNECTIONS CLIENT_CONCURRENCY CLIENT_RPS CLIENT_RPS_MAX CLIENT_RPS_STEP CLIENT_LATENCY_BASE CLIENT_REQUEST_BODY_SIZE DURATION KILL_DELAY AUTO_EXTEND_INPUT)

# Docker Setting set as empty since this workload doesn't support Docker backend.
DOCKER_IMAGE=""
DOCKER_OPTIONS=""

# Kubernetes Setting
RECONFIG_OPTIONS="
-DMODE=$MODE
-DPROTOCOL=$PROTOCOL
-DNODES=$NODES
-DISTIO_VERSION=$ISTIO_VERSION
-DSERVER_DOMAIN_NAME=$SERVER_DOMAIN_NAME
-DSERVER_PORT=$SERVER_PORT
-DSERVER_CORE_NUM=$SERVER_CORE_NUM
-DSERVER_MEM=$SERVER_MEM
-DSERVER_DELAY_MODE=$SERVER_DELAY_MODE
-DSERVER_DELAY_SECONDS=$SERVER_DELAY_SECONDS
-DSERVER_RESPONSE_BODY_SIZE=$SERVER_RESPONSE_BODY_SIZE
-DSERVER_EGRESS_GW_CPU=$SERVER_EGRESS_GW_CPU
-DSERVER_EGRESS_GW_MEM=$SERVER_EGRESS_GW_MEM
-DCLIENT_CORE_NUM=$CLIENT_CORE_NUM
-DCLIENT_MEM=$CLIENT_MEM
-DCLIENT_SIDECAR_CPU=$CLIENT_SIDECAR_CPU
-DCLIENT_SIDECAR_MEM=$CLIENT_SIDECAR_MEM
-DCLIENT_CONNECTIONS=$CLIENT_CONNECTIONS
-DCLIENT_CONCURRENCY=$CLIENT_CONCURRENCY
-DCLIENT_RPS=$CLIENT_RPS
-DCLIENT_RPS_MAX=$CLIENT_RPS_MAX
-DCLIENT_RPS_STEP=$CLIENT_RPS_STEP
-DCLIENT_LATENCY_BASE=$CLIENT_LATENCY_BASE
-DCLIENT_REQUEST_BODY_SIZE=$CLIENT_REQUEST_BODY_SIZE
-DDURATION=$DURATION
-DKILL_DELAY=$KILL_DELAY
-DAUTO_EXTEND_INPUT=$AUTO_EXTEND_INPUT
"

JOB_FILTER="app=nighthawk-client"


# Let the common validate.sh takes over to manage the workload execution.
. "$DIR/../../script/validate.sh"
