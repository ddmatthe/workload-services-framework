# nginx-dlb-cache-server-dlb

#
# Apache v2 license
# Copyright (C) 2023 Intel Corporation
# SPDX-License-Identifier: Apache-2.0
#
ARG OS_VER=22.04
ARG OS_IMAGE=ubuntu

FROM ${OS_IMAGE}:${OS_VER} AS build

RUN apt-get update && apt-get install -y wget make gcc libpcre3-dev zlib1g-dev libxml2 libxslt-dev xz-utils patch git

ARG LIBDLB_VER=7.8.0
ARG LIBDLB_PKG="dlb_linux_src_release_${LIBDLB_VER}_2022_09_20.txz"
ARG LIBDLB_REPO="https://downloadmirror.intel.com/744007"

RUN wget ${LIBDLB_REPO}/${LIBDLB_PKG} && \
    tar xf ${LIBDLB_PKG} && \
    cd dlb/libdlb/ && \
    make
ENV LIBDLB_LOCAL_PATH=/dlb/libdlb

ARG DLB_PATCH_VER=271e071
ARG DLB_PATCH_REPO=https://github.com/intel/workload-services-framework.git
RUN git clone ${DLB_PATCH_REPO}
RUN cp -r workload-services-framework/staging/nginx-dlb/patches /nginx-patch-dlb

ARG NGINX_VER=1.16.1
ARG NGINX_PKG=http://nginx.org/download/nginx-${NGINX_VER}.tar.gz
RUN wget ${NGINX_PKG} && tar xf nginx-${NGINX_VER}.tar.gz && \
    export PREFIX=/ && mkdir -p $PREFIX/var/www/tmp && \
    cd nginx-${NGINX_VER} && \
    find /nginx-patch-dlb/ -type f -name '*.patch' -print0 | sort -z | xargs -t -0 -n 1 patch -p1 -i && \
    ./configure \
        --prefix=$PREFIX \
        --sbin-path=$PREFIX/sbin/nginx \
        --modules-path=$PREFIX/lib64/nginx/modules \
        --conf-path=$PREFIX/etc/nginx/nginx.conf \
        --error-log-path=$PREFIX/var/www/log/error.log \
        --pid-path=$PREFIX/var/www/nginx.pid \
        --lock-path=$PREFIX/var/www/nginx.lock \
        --http-log-path=$PREFIX/var/www/log/access.log \
        --http-client-body-temp-path=$PREFIX/var/www/tmp/client_body \
        --http-proxy-temp-path=$PREFIX/var/www/tmp/proxy \
        --http-fastcgi-temp-path=$PREFIX/var/www/tmp/fastcgi \
        --http-uwsgi-temp-path=$PREFIX/var/www/tmp/uwsgi \
        --http-scgi-temp-path=$PREFIX/var/www/tmp/scgi \
        --user=nobody --group=nobody \
        --with-select_module --with-poll_module --with-threads \
        --with-pcre && \
    make -j && \
    make install

COPY cache-server/*.conf /etc/nginx/
COPY cache-server/run_cache_server.sh /

RUN chmod +x /run_cache_server.sh

RUN mkfifo /export-logs
CMD (/run_cache_server.sh; echo $? > status) 2>&1 | tee output.logs && \
    tar cf /export-logs status output.logs && \
    sleep infinity
