#
# Apache v2 license
# Copyright (C) 2023 Intel Corporation
# SPDX-License-Identifier: Apache-2.0
#

- name: Install calico
  include_role:
    name: cni-calico

- name: Set fact for images
  set_fact:
    k8s_calicovpp_image_vpp: "{{ k8s_calicovpp_dsa_image_vpp }}{{ k8s_calicovpp_dsa_image_version | default('latest') }}"
    k8s_calicovpp_image_agent: "{{ k8s_calicovpp_dsa_image_agent }}{{ k8s_calicovpp_dsa_image_version | default('latest') }}"
  when: k8s_calicovpp_dsa_enable | default(false)

- name: Set fact for l3fwd images
  set_fact:
    k8s_calicovpp_l3fwd_image: "{{ k8s_calicovpp_l3fwd_image }}{{ k8s_calicovpp_l3fwd_image_version | default('latest') }}"

# Customize calico-vpp.yaml
- block:
  - block:
    - name: Get DSA device ids
      shell: |
        lspci |grep -m 1 'Device 0b25' |awk '{print "0000:"$1}'
      register: get_dsa_device_ids

    - name: Fail if no DSA device detected
      fail:
        msg: "Error: no DSA device detected"
      when: (get_dsa_device_ids.rc != 0) or (get_dsa_device_ids.stdout_lines | length <= 0)

    - name: Set fact for DSA devices
      set_fact:
        k8s_calicovpp_dsa_device_ids: "{{ get_dsa_device_ids.stdout_lines }}"
      when: k8s_calicovpp_dsa_enable | default(false)

    - name: Bind DSA device by device ids
      include_role:
        name: dpdk-calico
        tasks_from: bind-dsa.yaml
      vars:
        dsa_device_ids: "{{ k8s_calicovpp_dsa_device_ids }}"
    when: k8s_calicovpp_dsa_enable | default(false)

  - name: Generate calico-vpp.yaml by template
    become: true
    delegate_to: localhost
    template:
      src: calico-vpp.yaml.j2
      dest: "/tmp/{{ wl_namespace }}-calico-vpp.yaml"
      lstrip_blocks: true
    vars:
      vpp_dataplane_interface: "{{ vpp_dataplane_interface }}"
      dsa_device_ids: "{{ k8s_calicovpp_dsa_device_ids | default([]) }}"

  - name: Debug core number in Calico-VPP yaml
    delegate_to: localhost
    shell: |
      grep -n "dev __PCI_DEVICE_ID__" "/tmp/{{ wl_namespace }}-calico-vpp.yaml"
    ignore_errors: true

  - name: Copy customized calico-vpp.yaml to remote
    ansible.builtin.copy:
      src: "/tmp/{{ wl_namespace }}-calico-vpp.yaml"
      dest: /tmp/{{ wl_namespace }}-calico-vpp.yaml

  - name: Install calico vpp
    shell: "kubectl apply -f /tmp/{{ wl_namespace }}-calico-vpp.yaml"

  - block:
    - name: Wait for calico vpp ready
      shell: |
        # kubectl wait --namespace=calico-system pod --for=condition=Ready -l app.kubernetes.io/name=csi-node-driver --timeout=60s
        kubectl wait --namespace=calico-system pod --for=condition=Ready -l app.kubernetes.io/name=calico-kube-controllers --timeout=60s
      async: "{{  k8s_calicovpp_wait_ready_timeout | default(60) }}"

    rescue:
    - name: Rescue mac address change
      include_tasks:
        file: rescue-macchange.yaml

    always:
    - name: Wait for calico vpp ready
      shell: |
        kubectl wait --namespace=calico-apiserver pod --for=condition=Ready -l apiserver=true --timeout=60s
      register: wait_ready
      retries: 100
      delay: 5
      until: wait_ready.rc == 0

  - name: Remove temp files
    file:
      path: "/tmp/{{ wl_namespace }}-calico-vpp.yaml"
      state: absent
    ignore_errors: true

  - name: remove remote image files
    become: true
    file:
      path: '{{ item }}'
      state: absent
    loop:
      - /tmp/{{ wl_namespace }}_calicovpp_dsa_vpp.tar
      - /tmp/{{ wl_namespace }}_calicovpp_dsa_agent.tar
      - /tmp/{{ wl_namespace }}_calicovpp_l3fwd.tar

- name: Install calivppctl
  include_tasks:
    file: "calivppctl.yaml"

- block:
  - name: Install vpp l3fwd
    include_tasks:
      file: vpp-l3fwd.yaml

  - name: Add ip route
    include_tasks:
      file: iproute-l3fwd.yaml
  when: k8s_calicovpp_l3fwd_enable
